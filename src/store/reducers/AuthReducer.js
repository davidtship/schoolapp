import {
    LOADING_TOGGLE_ACTION,
    LOGIN_CONFIRMED_ACTION,
    LOGIN_FAILED_ACTION,
    LOGOUT_ACTION,
    SIGNUP_CONFIRMED_ACTION,
    SIGNUP_FAILED_ACTION,
} from '../actions/AuthActions';

const initialState = {
    auth: {
        access: '',
        refresh: '',
        first_name: '',
        last_name: '',
        rccm: '',
    },
    errorMessage: '',
    successMessage: '',
    showLoading: false,
};

export function AuthReducer(state = initialState, action) {
    switch (action.type) {

        // ‚úÖ Inscription r√©ussie
        case SIGNUP_CONFIRMED_ACTION:
            return {
                ...state,
                auth: action.payload,
                errorMessage: '',
                successMessage: 'Inscription r√©ussie !',
                showLoading: false,
            };

        // ‚úÖ Connexion r√©ussie
        case LOGIN_CONFIRMED_ACTION:
            return {
                ...state,
                auth: action.payload,
                errorMessage: '',
                successMessage: 'Connexion r√©ussie ! Bienvenue',
                showLoading: false,
            };

        // üö™ D√©connexion
        case LOGOUT_ACTION:
            return {
                ...state,
                auth: { ...initialState.auth },
                errorMessage: '',
                successMessage: '',
                showLoading: false,
            };

        // ‚ö†Ô∏è √âchec (login ou signup)
        case SIGNUP_FAILED_ACTION:
        case LOGIN_FAILED_ACTION:
            return {
                ...state,
                errorMessage: action.payload || 'Une erreur est survenue.',
                successMessage: '',
                showLoading: false,
            };

        // ‚è≥ Toggle loading
        case LOADING_TOGGLE_ACTION:
            return {
                ...state,
                showLoading: action.payload,
            };

        // üîÅ Par d√©faut
        default:
            return state;
    }
}
